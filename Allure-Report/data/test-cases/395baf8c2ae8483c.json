{
  "uid" : "395baf8c2ae8483c",
  "name" : "test_01_CodePayProcess[13000000000-8888]",
  "fullName" : "Runner.test_case.Test_Class#test_01_CodePayProcess",
  "historyId" : "aa90340c57c513625c9b3f743c5397e4",
  "time" : {
    "start" : 1611630095233,
    "stop" : 1611630116134,
    "duration" : 20901
  },
  "status" : "broken",
  "statusMessage" : "ValueError: empty range for randrange() (1,1, 0)",
  "statusTrace" : "self = <Runner.test_case.Test_Class object at 0x0000000003C9C7B8>\nvalue_ID = '13000000000', value_pwd = '8888'\n\n    @pytest.mark.parametrize(\"value_ID, value_pwd\", csvCodeLoginSuccess)\n    def test_01_CodePayProcess(self, value_ID,value_pwd):\n        self.b.jumopCodeLoginMod()\n        self.b.codeIDLoginMod(value_ID)\n        self.b.codePasswordLoginMod(value_pwd)\n        self.b.codeLoginBtn()\n        # !-----------------------------------------------用户名断言----------------------------------------------! #\n        self.eleText_01 = self.a.findElementTextSection(self.b.xpathHomePageId, 4)\n        self.eleText_02 = value_ID[len(value_ID) - 4:]\n        assert self.eleText_01 == self.eleText_02\n        self.c.allWares()\n        self.c.chooseWares()\n        # self.c.waresSort()\n        self.c.windowScrrollBy()\n        self.c.clickWare(self.b.xpathWaresMag, 1, 2)\n        self.c.joinShopCar()\n        self.c.goShopCarSett()\n        self.c.joinCarImg()\n        self.c.allCheckBox()\n        self.c.goSett()\n        self.c.addConsigneeAddr(self.a.phoneNORandomGenerator(\"word\"),\n                                self.a.phoneNORandomGenerator(\"phone\"),\n>                               self.a.phoneNORandomGenerator(\"word\"))\n\nRunner\\test_case.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nSourceCode\\test_PaymentProcessMode.py:81: in addConsigneeAddr\n    self.dr.selectBox(self.xpathAddr_Area)\ntools\\test_basic.py:114: in selectBox\n    opt.select_by_index(random.randint(1, strLen-2))\nd:\\python\\lib\\random.py:222: in randint\n    return self.randrange(a, b+1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <random.Random object at 0x0000000002B24748>, start = 1, stop = 1\nstep = 1, _int = <class 'int'>\n\n    def randrange(self, start, stop=None, step=1, _int=int):\n        \"\"\"Choose a random item from range(start, stop[, step]).\n    \n        This fixes the problem with randint() which includes the\n        endpoint; in Python this is usually not what you want.\n    \n        \"\"\"\n    \n        # This code is a bit messy to make it fast for the\n        # common case while still doing adequate error checking.\n        istart = _int(start)\n        if istart != start:\n            raise ValueError(\"non-integer arg 1 for randrange()\")\n        if stop is None:\n            if istart > 0:\n                return self._randbelow(istart)\n            raise ValueError(\"empty range for randrange()\")\n    \n        # stop argument supplied.\n        istop = _int(stop)\n        if istop != stop:\n            raise ValueError(\"non-integer stop for randrange()\")\n        width = istop - istart\n        if step == 1 and width > 0:\n            return istart + self._randbelow(width)\n        if step == 1:\n>           raise ValueError(\"empty range for randrange() (%d,%d, %d)\" % (istart, istop, width))\nE           ValueError: empty range for randrange() (1,1, 0)\n\nd:\\python\\lib\\random.py:200: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_Class",
    "time" : {
      "start" : 1611630090760,
      "stop" : 1611630095232,
      "duration" : 4472
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_Test_Class::0",
    "time" : {
      "start" : 1611630116814,
      "stop" : 1611630117325,
      "duration" : 511
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Runner"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "subSuite",
    "value" : "Test_Class"
  }, {
    "name" : "host",
    "value" : "WIN7-2019040802"
  }, {
    "name" : "thread",
    "value" : "7120-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Runner.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "value_ID",
    "value" : "'13000000000'"
  }, {
    "name" : "value_pwd",
    "value" : "'8888'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "395baf8c2ae8483c.json",
  "parameterValues" : [ "'13000000000'", "'8888'" ]
}