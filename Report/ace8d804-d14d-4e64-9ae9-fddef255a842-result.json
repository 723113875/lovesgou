{"name": "test_03_CodeLoginFail[13000000000-1234]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == '内部验证码不正确'\n  - 内部验证码不正确", "trace": "self = <Runner.test_case.Test_Class object at 0x0000000003CB7D68>\nvalue_ID = '13000000000', value_pwd = '1234'\n\n    @pytest.mark.parametrize(\"value_ID, value_pwd\", csvDataCode)\n    def test_03_CodeLoginFail(self, value_ID, value_pwd):\n        self.b.jumopCodeLoginMod()\n        self.b.codeIDLoginMod(value_ID)\n        self.b.codePasswordLoginMod(value_pwd)\n        self.b.codeLoginBtn()\n        #!-----------------------------------------------断言---------------------------------------------! #\n        if len(value_ID) < 11 or str.isdigit(value_ID) is False:\n            assert self.a.findElementText(self.b.xpathPhoneNumFormat) == \"请输入正确的手机号格式\"\n        elif len(value_pwd) != 4 or str.isalnum(value_pwd) is False:\n            assert self.a.findElementText(self.b.xpathCodeFormat) == \"请输入正确的验证码格式\"\n        else:\n>           assert self.a.findElementText(self.b.xpathPopUpTest) ==\"内部验证码不正确\"\nE           AssertionError: assert '' == '内部验证码不正确'\nE             - 内部验证码不正确\n\nRunner\\test_case.py:100: AssertionError"}, "parameters": [{"name": "value_ID", "value": "'13000000000'"}, {"name": "value_pwd", "value": "'1234'"}], "start": 1611629639534, "stop": 1611629640567, "uuid": "9c87ce52-172d-4d17-a406-674b04c19562", "historyId": "374c50170eb12919878050778dd57065", "testCaseId": "f042cdce37b33e57b1f1ee3338f54dac", "fullName": "Runner.test_case.Test_Class#test_03_CodeLoginFail", "labels": [{"name": "parentSuite", "value": "Runner"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "Test_Class"}, {"name": "host", "value": "WIN7-2019040802"}, {"name": "thread", "value": "8760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Runner.test_case"}]}